<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ce9ce450-2d02-48d9-8825-ccf45ebda5f8" name="Changes" comment="chore(gitignore): ignore IDE configs, Python cache, logs, and secrets&#10;&#10;- Added .env and config/settings.json to ignored files&#10;- Ignored PyCharm .idea/ folder and all .iml and .xml configs&#10;- Excluded Python cache files: __pycache__, *.pyc, *.pyo, etc.&#10;- Prevented logs and system files (.DS_Store, Thumbs.db) from being tracked&#10;- Removed already tracked files via `git rm --cached` where necessary">
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/accounting_for_corps.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/config/settings.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/members.json" beforeDir="false" afterPath="$PROJECT_DIR$/data/members.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="3dfab251-cb91-4755-8f78-3b9d2c9837cc" />
        <option name="url" value="https://github.com/malyshev-vladimir/accounting_for_corps.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="ProjectId" id="2v0TPThmXL8Ftzi2Z2zG88zWSLq" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/user/PycharmProjects/accounting_for_corps/data&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;proofread&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ],
    &quot;RunConfigurationTargetLRU&quot;: [
      &quot;56013735-f8b3-4d8c-954c-55293b123472&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\user\PycharmProjects\accounting_for_corps\data" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\user\PycharmProjects\accounting_for_corps" />
    </key>
  </component>
  <component name="RunManager" selected="Database Script.init.sql">
    <configuration name="init.sql" type="DatabaseScript" editBeforeRun="true" temporary="true" nameIsGenerated="true">
      <script-file value="$PROJECT_DIR$/init.sql" />
      <script-mode>FILE</script-mode>
      <data-source id="56013735-f8b3-4d8c-954c-55293b123472" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="DjangoTestsConfigurationType">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="TARGET" value="" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration name="email_template.html" type="JavascriptDebugType" temporary="true" nameIsGenerated="true" uri="http://localhost:63342/accounting_for_corps/config/email_template.html" useBuiltInWebServerPort="true">
      <method v="2" />
    </configuration>
    <configuration default="true" type="PyBehaveRunConfigurationType" factoryName="Behave">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="ADDITIONAL_ARGS" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="app" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="accounting_for_corps" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/app.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="accounting_for_corps" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Python.FlaskServer">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Tox" factoryName="Tox">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docs" factoryName="Docutils task">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="docutils_input_file" value="" />
      <option name="docutils_output_file" value="" />
      <option name="docutils_params" value="" />
      <option name="docutils_task" value="" />
      <option name="docutils_open_in_browser" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docs" factoryName="Sphinx task">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="docutils_input_file" value="" />
      <option name="docutils_output_file" value="" />
      <option name="docutils_params" value="" />
      <option name="docutils_task" value="" />
      <option name="docutils_open_in_browser" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Database Script.init.sql" />
        <item itemvalue="Python.app" />
        <item itemvalue="Python.main" />
        <item itemvalue="JavaScript Debug.email_template.html" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ce9ce450-2d02-48d9-8825-ccf45ebda5f8" name="Changes" comment="" />
      <created>1743280968048</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1743280968048</updated>
      <workItem from="1743280976330" duration="141343000" />
      <workItem from="1744235337188" duration="1826000" />
      <workItem from="1744243983616" duration="96640000" />
      <workItem from="1745270414071" duration="2027000" />
    </task>
    <task id="LOCAL-00001" summary="Initial commit">
      <option name="closed" value="true" />
      <created>1743281311258</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1743281311258</updated>
    </task>
    <task id="LOCAL-00002" summary="feat: implement member registration with JSON persistence&#10;&#10;- add Member class with title, active and balance fields&#10;- use Decimal with 2-digit rounding for balance&#10;- store members in JSON using name as key&#10;- validate title with Enum and fallback messages&#10;- convert Decimal to float for JSON serialization&#10;- handle invalid or empty JSON file gracefully">
      <option name="closed" value="true" />
      <created>1743466551789</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1743466551789</updated>
    </task>
    <task id="LOCAL-00003" summary="feat: implement transaction system and dynamic balance calculation for members&#10;&#10;- added support for recording member transactions via console&#10;  + transaction includes date (year/month/day), description, and amount (+/-)&#10;  + amount is validated and rounded to 2 decimal places&#10;- removed static 'balance' field from Member class&#10;- added 'start_balance' field as initial fixed value&#10;- added @property 'balance' to calculate current balance dynamically from transactions&#10;- adjusted to_dict to store 'start_balance' and 'transactions'&#10;- adjusted from_dict to restore members from JSON&#10;  + supports legacy 'balance' field as fallback&#10;  + ensures 'transactions' defaults to an empty list if missing&#10;- updated view_members to show computed balance instead of static value&#10;- improved error handling for invalid input and missing data">
      <option name="closed" value="true" />
      <created>1743475305560</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1743475305560</updated>
    </task>
    <task id="LOCAL-00004" summary="feat: add created_at field to Member and implement monthly payment service&#10;&#10;- created monthly_payments.py service to calculate and apply missing monthly contributions&#10;  + contributions start from created_at and go up to current date&#10;  + payments are based on fixed title (CB, iaCB, F), skipped for AH&#10;  + contributions are recorded as negative transactions (expenses)&#10;- added 'created_at' field to Member to track account creation date&#10;- added &quot;F&quot; to Title enum to support fallback/default role">
      <option name="closed" value="true" />
      <created>1743630320851</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1743630320851</updated>
    </task>
    <task id="LOCAL-00005" summary="feat: add structured transaction input with standard types and validation&#10;&#10;- added menu for standard transaction types (custom, deposit, drinks, fine, refund, event)&#10;- implemented input validation for transaction amount using Decimal with rounding to 2 decimal places&#10;- improved transaction description generation per type (e.g. fine from protocol, drinks, etc.)&#10;- added reusable functions:&#10;  + input_transaction_amount: safe and precise input of signed Decimal values&#10;  + input_protocol_info: collects meeting number, type (AC/CC/GCC/FCC), and semester&#10;  + input_semester_by_choice: collects all necessary information to determine the semester and outputs it in a standardized format (e.g. WiSe24/25 or SoSe25)&#10;- connected all components into updated add_transaction_to_member workflow">
      <option name="closed" value="true" />
      <created>1743700053067</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1743700053067</updated>
    </task>
    <task id="LOCAL-00006" summary="refactor: switch to using email as unique key and restructure member records&#10;&#10;- removed 'active' field from Member class&#10;- switched from using 'name' to 'email' as the unique identifier for each member&#10;- updated JSON: top-level keys are now emails; 'name' moved into each member record&#10;- automated 'created_at' field: it is now set internally on creation and excluded from parameters">
      <option name="closed" value="true" />
      <created>1743808685739</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1743808685739</updated>
    </task>
    <task id="LOCAL-00007" summary="refactor: move all input-related functions to interface module&#10;&#10;- created services/interface.py to encapsulate user input logic&#10;&#10;- added input_valid_date() for date entry with validation&#10;&#10;- added input_transaction_amount() for monetary values with decimal formatting&#10;&#10;- added input_protocol_info() and input_semester_by_choice() to standardize protocol-related input&#10;&#10;- updated main.py to import and use these centralized input functions&#10;&#10;- removed inline input logic from add_transaction_to_member and others for better separation of concerns&#10;&#10;- improved user prompts with arrows (=&gt;) and clearer structure&#10;&#10;- enhanced modularity and readability of the codebase">
      <option name="closed" value="true" />
      <created>1743811312044</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1743811312044</updated>
    </task>
    <task id="LOCAL-00008" summary="feat: add email report generation using template and centralized config&#10;&#10;- created services/email_templates.py with format_member_email() to generate personalized email reports using a customizable HTML-template from config/email_template.html&#10;- implemented structured table formatting for transactions with aligned columns (date, amount, description)&#10;- added send_report_to_member() to main.py with member selection and email delivery&#10;- created send_email_report() function to send messages via SMTP with SSL&#10;- added services/settings_loader.py to centralize loading of config/settings.json&#10;- generated a dynamic subject line: CC-Kontostand zum DD.MM.YYYY (Name)&quot; to prevent Gmail from grouping multiple emails into one thread (conversation view)&#10;- updated main menu with option 4: send email report to a member&#10;- added full inline comments and docstrings for readability and professional documentation">
      <option name="closed" value="true" />
      <created>1743902798642</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1743902798642</updated>
    </task>
    <task id="LOCAL-00009" summary="refactor: replace single title field with title_history for member status tracking&#10;&#10;- removed separate 'title' attribute from Member class&#10;- introduced title_history: dict[title → date] to store the full history of status assignments&#10;- added @property title to dynamically return the most recent title based on assignment date&#10;- updated Member.__init__ to store initial title as title_history[title] = created_at&#10;- updated to_dict() to serialize only title_history&#10;- updated from_dict() to expect title_history structure only (legacy 'title' support removed)&#10;- improved _parse_balance() for safe monetary conversion:&#10;  + added support for both comma and dot as decimal separators&#10;  + added Decimal rounding to 2 decimal places using ROUND_HALF_UP&#10;  + added error handling for invalid input types&#10;- added inline comments and docstrings for clarity and maintainability">
      <option name="closed" value="true" />
      <created>1743993152921</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1743993152921</updated>
    </task>
    <task id="LOCAL-00010" summary="refactor: replace single title field with title_history for member status tracking&#10;&#10;- removed separate 'title' attribute from Member class&#10;- introduced title_history: dict[title → date] to store the full history of status assignments&#10;- added @property title to dynamically return the most recent title based on assignment date&#10;- updated Member.__init__ to store initial title as title_history[title] = created_at&#10;- updated to_dict() to serialize only title_history&#10;- updated from_dict() to expect title_history structure only (legacy 'title' support removed)&#10;- improved _parse_balance() for safe monetary conversion:&#10;  + added support for both comma and dot as decimal separators&#10;  + added Decimal rounding to 2 decimal places using ROUND_HALF_UP&#10;  + added error handling for invalid input types&#10;- moved load_members() and save_members() into services/members_io.py&#10;- added function change_member_title() to update a member's title and record it in title_history&#10;- added new main menu entry: &quot;5. Change title for a member&quot;&#10;- renamed functions to load_all_members() and save_all_members() for clarity&#10;- added inline comments and docstrings for clarity and maintainability">
      <option name="closed" value="true" />
      <created>1743997119253</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1743997119253</updated>
    </task>
    <task id="LOCAL-00011" summary="refactor: replace single title field with title_history for member status tracking&#10;&#10;- removed separate 'title' attribute from Member class&#10;- introduced title_history: dict[title → date] to store the full history of status assignments&#10;- added @property title to dynamically return the most recent title based on assignment date&#10;- updated Member.__init__ to store initial title as title_history[title] = created_at&#10;- updated to_dict() to serialize only title_history&#10;- updated from_dict() to expect title_history structure only (legacy 'title' support removed)&#10;- improved _parse_balance() for safe monetary conversion:&#10;  + added support for both comma and dot as decimal separators&#10;  + added Decimal rounding to 2 decimal places using ROUND_HALF_UP&#10;  + added error handling for invalid input types&#10;- moved load_members() and save_members() into services/members_io.py&#10;- added function change_member_title() to update a member's title and record it in title_history&#10;- added new main menu entry: &quot;5. Change title for a member&quot;&#10;- renamed functions to load_all_members() and save_all_members() for clarity&#10;- added inline comments and docstrings for clarity and maintainability">
      <option name="closed" value="true" />
      <created>1744001362323</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1744001362323</updated>
    </task>
    <task id="LOCAL-00012" summary="feat: add Flask web interface with email login and member dashboard&#10;&#10;- created app.py with two routes: '/' (login form) and '/dashboard' (member view)&#10;- implemented form-based email input and lookup in members.json&#10;- added Bootstrap 5 styling to index.html and dashboard.html for responsive UI&#10;- renders personalized member data: name, title, balance, and transactions&#10;- included inline comments and module docstring for clarity and maintainability">
      <option name="closed" value="true" />
      <created>1744128645144</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1744128645144</updated>
    </task>
    <task id="LOCAL-00013" summary="refactor: unify Member model and serialization with first/last name, title history, and residency&#10;&#10;- changed Member constructor to accept: email, last_name, start_balance (required), plus first_name, title, is_resident (optional)&#10;- split 'name' field into 'first_name' and 'last_name' for clearer identity handling&#10;- added 'is_resident' and 'resident_history' to track living status over time&#10;- changed title_history format from {title → date} to {date → title} for chronological sorting&#10;- added methods get_title_at() and get_resident_status_at() to retrieve values by date&#10;- updated balance calculation to use parsed decimal values consistently&#10;- updated to_dict() and from_dict() to support new structure and preserve backward compatibility&#10;- ensured safe parsing of missing or outdated fields when loading legacy data&#10;- replaced member.name with f&quot;{member.first_name} {member.last_name}&quot; across all menu actions&#10;- updated add_member() to prompt for separate first_name and last_name inputs&#10;- ensured initialization of title_history and resident_history with current date&#10;- updated change_member_title() to store new title under current date and sync to member.title&#10;- modified /add route to support new Member fields from form: first_name, last_name, title, is_resident&#10;- populated title_history and resident_history with creation date as key&#10;- passed updated Member objects to dashboard and ensured compatibility with existing layout&#10;- added Bootstrap form template add_member.html to support member creation via web interface&#10;- all modified components are now fully aligned with historical tracking logic&#10;- added inline comments and PEP 257-compliant docstrings for clarity and maintainability">
      <option name="closed" value="true" />
      <created>1744235845949</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1744235845949</updated>
    </task>
    <task id="LOCAL-00014" summary="feat: add dynamic admin panel with sidebar and responsive layout&#10;&#10;- implemented admin check via email from settings.json&#10;- added redirect to /admin panel if logged-in user is the administrator&#10;- created admin_base.html layout with responsive collapsible sidebar using Bootstrap 5&#10;- sidebar hides completely on mobile&#10;- toggle button added for mobile view with overlay&#10;- sidebar includes navigation to: members table, add member, change title, add transaction, settings&#10;- created admin_members.html showing a table of all members with title, name (last and first name), email (hidden on small screens), current balance and edit icon&#10;- added inline comments and block layout for maintainability">
      <option name="closed" value="true" />
      <created>1744253340751</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1744253340751</updated>
    </task>
    <task id="LOCAL-00015" summary="feat: integrate member creation form into admin panel&#10;&#10;- added new route /admin/add_member to handle GET and POST&#10;- created admin_add_member.html extending admin_base&#10;- moved HTML form from add_member.html into the admin panel template&#10;- form includes fields for: email, name, title, resident status, starting balance&#10;- upon submission, new member is validated and saved to members.json&#10;- after creation, user is redirected to the main admin page (/admin)">
      <option name="closed" value="true" />
      <created>1744255390658</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1744255390658</updated>
    </task>
    <task id="LOCAL-00016" summary="style(admin): improve members table layout, alignment, and container responsiveness&#10;&#10;- added creation date column (Erstellt am) to members table&#10;- applied responsive visibility: creation date hides on screens &lt; 992px&#10;- added delete icon (bi-trash) per row with confirmation prompt&#10;- centered balance column (Kontostand) using text-center&#10;- ensured vertical alignment with align-middle on table&#10;- added spacing and titles to edit/delete icons for clarity&#10;- preserved responsive hiding of email column on small screens&#10;- wrapped main admin content in Bootstrap container to restrict max width&#10;- improves overall readability, structure, and responsiveness on all devices">
      <option name="closed" value="true" />
      <created>1744259426200</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1744259426200</updated>
    </task>
    <task id="LOCAL-00017" summary="feat(admin): add transaction creation page with dynamic form fields&#10;&#10;- Created admin interface for adding transactions&#10;- Added multiple transaction types (custom, drinks report, credit, fine, refund)&#10;- Implemented dynamic field rendering based on selected transaction type&#10;- Automatically generated transaction descriptions for each type&#10;- Used readonly description field to preserve value in POST&#10;- Connected selected date to description formatting&#10;- Improved user experience with responsive field updates">
      <option name="closed" value="true" />
      <created>1744377160845</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1744377160846</updated>
    </task>
    <task id="LOCAL-00018" summary="feat(admin): Add transaction table below the form + UI improvements&#10;&#10;- Added a transaction table below the &quot;Transaktion hinzufügen&quot; form&#10;- Transactions are loaded dynamically via AJAX (/admin/get_transactions)&#10;- Implemented date formatting (dd.mm.yyyy) on the client side">
      <option name="closed" value="true" />
      <created>1744571813846</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1744571813847</updated>
    </task>
    <task id="LOCAL-00019" summary="Add route and UI action to verify and add missing monthly payments&#10;&#10;- Added /admin/check_monthly_payments route to scan all members for missing monthly contributions and append them automatically (respect AH title and historical resident status per month)&#10;- Created get_monthly_payment_for_residents() and get_monthly_payment_for_non_residents() to dynamically fetch amounts from config/settings.json&#10;- Added sidebar link with icon to trigger monthly payment verification from admin panel">
      <option name="closed" value="true" />
      <created>1744667526384</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1744667526384</updated>
    </task>
    <task id="LOCAL-00020" summary="feat(admin): add table for bulk editing of member titles&#10;&#10;- Each row includes last name and a dropdown with valid title options&#10;- Current title is preselected based on today's date&#10;- Title changes are staged in the UI and only applied after pressing &quot;Save titles&quot;&#10;- Visual change indicator implemented using Bootstrap Icons:&#10;  + check-circle for unchanged&#10;  + pencil-square for modified&#10;- Added `/update_titles_bulk` route to handle batch updates&#10;- Lays groundwork for future audited updates to title history">
      <option name="closed" value="true" />
      <created>1744753737572</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1744753737572</updated>
    </task>
    <task id="LOCAL-00021" summary="fix(payments): ensure exact match for monthly payment descriptions&#10;&#10;- Monthly payment description is now generated as &quot;Aktivenbeitrag (Monat Jahr)&quot;, e.g. &quot;Aktivenbeitrag (Juni 2024)&quot;&#10;- Transactions are only added if an identical description does not already exist">
      <option name="closed" value="true" />
      <created>1744923775460</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1744923775461</updated>
    </task>
    <task id="LOCAL-00022" summary="feat(admin): implemented transaction deletion in admin interface&#10;- added support for deleting transactions via trash icon&#10;- implemented confirmation prompt and deletion without page reload">
      <option name="closed" value="true" />
      <created>1745181623334</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1745181623334</updated>
    </task>
    <task id="LOCAL-00023" summary="feat(admin): implement transaction deletion and persistent saving&#10;&#10;- added deletion via trash icon with dynamic UI update (no reload)&#10;- introduced explicit transaction IDs to ensure correct deletion even with reversed order&#10;- fixed save_all_members to properly serialize and save Member data">
      <option name="closed" value="true" />
      <created>1745187584859</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1745187584859</updated>
    </task>
    <task id="LOCAL-00024" summary="chore(gitignore): ignore IDE configs, Python cache, logs, and secrets&#10;&#10;- Added .env and config/settings.json to ignored files&#10;- Ignored PyCharm .idea/ folder and all .iml and .xml configs&#10;- Excluded Python cache files: __pycache__, *.pyc, *.pyo, etc.&#10;- Prevented logs and system files (.DS_Store, Thumbs.db) from being tracked&#10;- Removed already tracked files via `git rm --cached` where necessary">
      <option name="closed" value="true" />
      <created>1745271823815</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1745271823815</updated>
    </task>
    <option name="localTasksCounter" value="25" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial commit" />
    <MESSAGE value="feat: implement member registration with JSON persistence&#10;&#10;- add Member class with title, active and balance fields&#10;- use Decimal with 2-digit rounding for balance&#10;- store members in JSON using name as key&#10;- validate title with Enum and fallback messages&#10;- convert Decimal to float for JSON serialization&#10;- handle invalid or empty JSON file gracefully" />
    <MESSAGE value="feat: implement transaction system and dynamic balance calculation for members&#10;&#10;- added support for recording member transactions via console&#10;  + transaction includes date (year/month/day), description, and amount (+/-)&#10;  + amount is validated and rounded to 2 decimal places&#10;- removed static 'balance' field from Member class&#10;- added 'start_balance' field as initial fixed value&#10;- added @property 'balance' to calculate current balance dynamically from transactions&#10;- adjusted to_dict to store 'start_balance' and 'transactions'&#10;- adjusted from_dict to restore members from JSON&#10;  + supports legacy 'balance' field as fallback&#10;  + ensures 'transactions' defaults to an empty list if missing&#10;- updated view_members to show computed balance instead of static value&#10;- improved error handling for invalid input and missing data" />
    <MESSAGE value="feat: add created_at field to Member and implement monthly payment service&#10;&#10;- created monthly_payments.py service to calculate and apply missing monthly contributions&#10;  + contributions start from created_at and go up to current date&#10;  + payments are based on fixed title (CB, iaCB, F), skipped for AH&#10;  + contributions are recorded as negative transactions (expenses)&#10;- added 'created_at' field to Member to track account creation date&#10;- added &quot;F&quot; to Title enum to support fallback/default role" />
    <MESSAGE value="feat: add structured transaction input with standard types and validation&#10;&#10;- added menu for standard transaction types (custom, deposit, drinks, fine, refund, event)&#10;- implemented input validation for transaction amount using Decimal with rounding to 2 decimal places&#10;- improved transaction description generation per type (e.g. fine from protocol, drinks, etc.)&#10;- added reusable functions:&#10;  + input_transaction_amount: safe and precise input of signed Decimal values&#10;  + input_protocol_info: collects meeting number, type (AC/CC/GCC/FCC), and semester&#10;  + input_semester_by_choice: collects all necessary information to determine the semester and outputs it in a standardized format (e.g. WiSe24/25 or SoSe25)&#10;- connected all components into updated add_transaction_to_member workflow" />
    <MESSAGE value="refactor: switch to using email as unique key and restructure member records&#10;&#10;- removed 'active' field from Member class&#10;- switched from using 'name' to 'email' as the unique identifier for each member&#10;- updated JSON: top-level keys are now emails; 'name' moved into each member record&#10;- automated 'created_at' field: it is now set internally on creation and excluded from parameters" />
    <MESSAGE value="refactor: move all input-related functions to interface module&#10;&#10;- created services/interface.py to encapsulate user input logic&#10;&#10;- added input_valid_date() for date entry with validation&#10;&#10;- added input_transaction_amount() for monetary values with decimal formatting&#10;&#10;- added input_protocol_info() and input_semester_by_choice() to standardize protocol-related input&#10;&#10;- updated main.py to import and use these centralized input functions&#10;&#10;- removed inline input logic from add_transaction_to_member and others for better separation of concerns&#10;&#10;- improved user prompts with arrows (=&gt;) and clearer structure&#10;&#10;- enhanced modularity and readability of the codebase" />
    <MESSAGE value="feat: add email report generation using template and centralized config&#10;&#10;- created services/email_templates.py with format_member_email() to generate personalized email reports using a customizable HTML-template from config/email_template.html&#10;- implemented structured table formatting for transactions with aligned columns (date, amount, description)&#10;- added send_report_to_member() to main.py with member selection and email delivery&#10;- created send_email_report() function to send messages via SMTP with SSL&#10;- added services/settings_loader.py to centralize loading of config/settings.json&#10;- generated a dynamic subject line: CC-Kontostand zum DD.MM.YYYY (Name)&quot; to prevent Gmail from grouping multiple emails into one thread (conversation view)&#10;- updated main menu with option 4: send email report to a member&#10;- added full inline comments and docstrings for readability and professional documentation" />
    <MESSAGE value="refactor: replace single title field with title_history for member status tracking&#10;&#10;- removed separate 'title' attribute from Member class&#10;- introduced title_history: dict[title → date] to store the full history of status assignments&#10;- added @property title to dynamically return the most recent title based on assignment date&#10;- updated Member.__init__ to store initial title as title_history[title] = created_at&#10;- updated to_dict() to serialize only title_history&#10;- updated from_dict() to expect title_history structure only (legacy 'title' support removed)&#10;- improved _parse_balance() for safe monetary conversion:&#10;  + added support for both comma and dot as decimal separators&#10;  + added Decimal rounding to 2 decimal places using ROUND_HALF_UP&#10;  + added error handling for invalid input types&#10;- added inline comments and docstrings for clarity and maintainability" />
    <MESSAGE value="refactor: replace single title field with title_history for member status tracking&#10;&#10;- removed separate 'title' attribute from Member class&#10;- introduced title_history: dict[title → date] to store the full history of status assignments&#10;- added @property title to dynamically return the most recent title based on assignment date&#10;- updated Member.__init__ to store initial title as title_history[title] = created_at&#10;- updated to_dict() to serialize only title_history&#10;- updated from_dict() to expect title_history structure only (legacy 'title' support removed)&#10;- improved _parse_balance() for safe monetary conversion:&#10;  + added support for both comma and dot as decimal separators&#10;  + added Decimal rounding to 2 decimal places using ROUND_HALF_UP&#10;  + added error handling for invalid input types&#10;- moved load_members() and save_members() into services/members_io.py&#10;- added function change_member_title() to update a member's title and record it in title_history&#10;- added new main menu entry: &quot;5. Change title for a member&quot;&#10;- renamed functions to load_all_members() and save_all_members() for clarity&#10;- added inline comments and docstrings for clarity and maintainability" />
    <MESSAGE value="feat: add Flask web interface with email login and member dashboard&#10;&#10;- created app.py with two routes: '/' (login form) and '/dashboard' (member view)&#10;- implemented form-based email input and lookup in members.json&#10;- added Bootstrap 5 styling to index.html and dashboard.html for responsive UI&#10;- renders personalized member data: name, title, balance, and transactions&#10;- included inline comments and module docstring for clarity and maintainability" />
    <MESSAGE value="refactor: unify Member model and serialization with first/last name, title history, and residency&#10;&#10;- changed Member constructor to accept: email, last_name, start_balance (required), plus first_name, title, is_resident (optional)&#10;- split 'name' field into 'first_name' and 'last_name' for clearer identity handling&#10;- added 'is_resident' and 'resident_history' to track living status over time&#10;- changed title_history format from {title → date} to {date → title} for chronological sorting&#10;- added methods get_title_at() and get_resident_status_at() to retrieve values by date&#10;- updated balance calculation to use parsed decimal values consistently&#10;- updated to_dict() and from_dict() to support new structure and preserve backward compatibility&#10;- ensured safe parsing of missing or outdated fields when loading legacy data&#10;- replaced member.name with f&quot;{member.first_name} {member.last_name}&quot; across all menu actions&#10;- updated add_member() to prompt for separate first_name and last_name inputs&#10;- ensured initialization of title_history and resident_history with current date&#10;- updated change_member_title() to store new title under current date and sync to member.title&#10;- modified /add route to support new Member fields from form: first_name, last_name, title, is_resident&#10;- populated title_history and resident_history with creation date as key&#10;- passed updated Member objects to dashboard and ensured compatibility with existing layout&#10;- added Bootstrap form template add_member.html to support member creation via web interface&#10;- all modified components are now fully aligned with historical tracking logic&#10;- added inline comments and PEP 257-compliant docstrings for clarity and maintainability" />
    <MESSAGE value="feat: add dynamic admin panel with sidebar and responsive layout&#10;&#10;- implemented admin check via email from settings.json&#10;- added redirect to /admin panel if logged-in user is the administrator&#10;- created admin_base.html layout with responsive collapsible sidebar using Bootstrap 5&#10;- sidebar hides completely on mobile&#10;- toggle button added for mobile view with overlay&#10;- sidebar includes navigation to: members table, add member, change title, add transaction, settings&#10;- created admin_members.html showing a table of all members with title, name (last and first name), email (hidden on small screens), current balance and edit icon&#10;- added inline comments and block layout for maintainability" />
    <MESSAGE value="feat: integrate member creation form into admin panel&#10;&#10;- added new route /admin/add_member to handle GET and POST&#10;- created admin_add_member.html extending admin_base&#10;- moved HTML form from add_member.html into the admin panel template&#10;- form includes fields for: email, name, title, resident status, starting balance&#10;- upon submission, new member is validated and saved to members.json&#10;- after creation, user is redirected to the main admin page (/admin)" />
    <MESSAGE value="style(admin): improve members table layout, alignment, and container responsiveness&#10;&#10;- added creation date column (Erstellt am) to members table&#10;- applied responsive visibility: creation date hides on screens &lt; 992px&#10;- added delete icon (bi-trash) per row with confirmation prompt&#10;- centered balance column (Kontostand) using text-center&#10;- ensured vertical alignment with align-middle on table&#10;- added spacing and titles to edit/delete icons for clarity&#10;- preserved responsive hiding of email column on small screens&#10;- wrapped main admin content in Bootstrap container to restrict max width&#10;- improves overall readability, structure, and responsiveness on all devices" />
    <MESSAGE value="feat(admin): add transaction creation page with dynamic form fields&#10;&#10;- Created admin interface for adding transactions&#10;- Added multiple transaction types (custom, drinks report, credit, fine, refund)&#10;- Implemented dynamic field rendering based on selected transaction type&#10;- Automatically generated transaction descriptions for each type&#10;- Used readonly description field to preserve value in POST&#10;- Connected selected date to description formatting&#10;- Improved user experience with responsive field updates" />
    <MESSAGE value="feat(admin): Add transaction table below the form + UI improvements&#10;&#10;- Added a transaction table below the &quot;Transaktion hinzufügen&quot; form&#10;- Transactions are loaded dynamically via AJAX (/admin/get_transactions)&#10;- Implemented date formatting (dd.mm.yyyy) on the client side" />
    <MESSAGE value="Add route and UI action to verify and add missing monthly payments&#10;&#10;- Added /admin/check_monthly_payments route to scan all members for missing monthly contributions and append them automatically (respect AH title and historical resident status per month)&#10;- Created get_monthly_payment_for_residents() and get_monthly_payment_for_non_residents() to dynamically fetch amounts from config/settings.json&#10;- Added sidebar link with icon to trigger monthly payment verification from admin panel" />
    <MESSAGE value="feat(admin): add table for bulk editing of member titles&#10;&#10;- Each row includes last name and a dropdown with valid title options&#10;- Current title is preselected based on today's date&#10;- Title changes are staged in the UI and only applied after pressing &quot;Save titles&quot;&#10;- Visual change indicator implemented using Bootstrap Icons:&#10;  + check-circle for unchanged&#10;  + pencil-square for modified&#10;- Added `/update_titles_bulk` route to handle batch updates&#10;- Lays groundwork for future audited updates to title history" />
    <MESSAGE value="fix(payments): ensure exact match for monthly payment descriptions&#10;&#10;- Monthly payment description is now generated as &quot;Aktivenbeitrag (Monat Jahr)&quot;, e.g. &quot;Aktivenbeitrag (Juni 2024)&quot;&#10;- Transactions are only added if an identical description does not already exist" />
    <MESSAGE value="feat(admin): implemented transaction deletion in admin interface&#10;- added support for deleting transactions via trash icon&#10;- implemented confirmation prompt and deletion without page reload" />
    <MESSAGE value="feat(admin): implement transaction deletion and persistent saving&#10;&#10;- added deletion via trash icon with dynamic UI update (no reload)&#10;- introduced explicit transaction IDs to ensure correct deletion even with reversed order&#10;- fixed save_all_members to properly serialize and save Member data" />
    <MESSAGE value="chore(gitignore): ignore IDE configs, Python cache, logs, and secrets&#10;&#10;- Added .env and config/settings.json to ignored files&#10;- Ignored PyCharm .idea/ folder and all .iml and .xml configs&#10;- Excluded Python cache files: __pycache__, *.pyc, *.pyo, etc.&#10;- Prevented logs and system files (.DS_Store, Thumbs.db) from being tracked&#10;- Removed already tracked files via `git rm --cached` where necessary" />
    <option name="LAST_COMMIT_MESSAGE" value="chore(gitignore): ignore IDE configs, Python cache, logs, and secrets&#10;&#10;- Added .env and config/settings.json to ignored files&#10;- Ignored PyCharm .idea/ folder and all .iml and .xml configs&#10;- Excluded Python cache files: __pycache__, *.pyc, *.pyo, etc.&#10;- Prevented logs and system files (.DS_Store, Thumbs.db) from being tracked&#10;- Removed already tracked files via `git rm --cached` where necessary" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/accounting_for_corps$app.coverage" NAME="app Coverage Results" MODIFIED="1745186826592" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/accounting_for_corps$email_templates.coverage" NAME="email_templates Coverage Results" MODIFIED="1743885472063" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/services" />
    <SUITE FILE_PATH="coverage/accounting_for_corps$main.coverage" NAME="main Coverage Results" MODIFIED="1744666136077" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>